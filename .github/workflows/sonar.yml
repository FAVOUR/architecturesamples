name: Android CI with SonarQube

# Define the events that trigger this workflow
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 11 for Android
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      # Step 3: Cache Gradle dependencies for faster builds
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Build the project and run tests
      - name: Build and run tests
        run: ./gradlew build jacocoTestReport

      # Step 5: Run SonarQube analysis
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Store your SonarQube token in GitHub Secrets
        run: ./gradlew sonarqube -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=YourProjectKey -Dsonar.host.url=https://sonarcloud.io

#name: SonarCloud
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    types: [opened, synchronize, reopened]
#jobs:
#  build:
#    name: Build and analyze
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: 17
#          distribution: 'zulu' # Alternative distribution options are available
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Gradle packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build sonar --info
#
